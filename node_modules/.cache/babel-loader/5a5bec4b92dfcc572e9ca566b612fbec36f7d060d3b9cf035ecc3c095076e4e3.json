{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Christian\\\\ruby_projects\\\\weather_react_frontend\\\\weather-app\\\\src\\\\TemperatureChart.js\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemperatureChart = ({\n  data\n}) => {\n  const chartData = data.hourly.time.map((time, index) => ({\n    time: new Date(time),\n    temperature: data.hourly.temperature_2m[index]\n  }));\n  const firstDate = chartData[0][\"time\"];\n  const lastDate = chartData[chartData.length - 1][\"time\"];\n  const formatDate = date => {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const day = date.getDate();\n    const monthIndex = date.getMonth();\n    const year = date.getFullYear();\n    return `${monthNames[monthIndex]} ${day.toString().padStart(2, \"0\")} ${year}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tempChart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Temperature Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      className: \"lineChart\",\n      data: chartData,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"time\",\n        label: {\n          value: `${formatDate(firstDate)} - ${formatDate(lastDate)}`,\n          position: 'insideBottom'\n        },\n        tick: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        label: {\n          value: 'Temp (°C)',\n          angle: -90,\n          position: 'insideLeft'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        position: \"top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        position: \"top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"temperature\",\n        stroke: \"#8884d8\",\n        dot: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = TemperatureChart;\nexport default TemperatureChart;\nvar _c;\n$RefreshReg$(_c, \"TemperatureChart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","TemperatureChart","data","chartData","hourly","time","map","index","Date","temperature","temperature_2m","firstDate","lastDate","length","formatDate","date","monthNames","day","getDate","monthIndex","getMonth","year","getFullYear","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","dataKey","label","value","position","tick","angle","type","stroke","dot","_c","$RefreshReg$"],"sources":["C:/Users/Christian/ruby_projects/weather_react_frontend/weather-app/src/TemperatureChart.js"],"sourcesContent":["import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nconst TemperatureChart = ({ data }) => {\r\n  const chartData = data.hourly.time.map((time, index) => ({\r\n    time: new Date(time),\r\n    temperature: data.hourly.temperature_2m[index],\r\n  }));\r\n  const firstDate = chartData[0][\"time\"]\r\n  const lastDate = chartData[chartData.length - 1][\"time\"]\r\n\r\n  const formatDate = (date) => {\r\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    const day = date.getDate();\r\n    const monthIndex = date.getMonth();\r\n    const year = date.getFullYear();\r\n    return `${monthNames[monthIndex]} ${day.toString().padStart(2, \"0\")} ${year}`;\r\n  };\r\n\r\n  return (\r\n    <div className='tempChart'>\r\n      <h2>Temperature Chart</h2>\r\n      <LineChart className='lineChart' data={chartData}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"time\" label={{ value: `${formatDate(firstDate)} - ${formatDate(lastDate)}`, position: 'insideBottom'}} tick={false} />\r\n        <YAxis label={{ value: 'Temp (°C)', angle: -90, position: 'insideLeft' }} />\r\n        <Tooltip position=\"top\" />\r\n        <Legend position=\"top\" />\r\n        <Line type=\"monotone\" dataKey=\"temperature\" stroke=\"#8884d8\" dot={false} />\r\n      </LineChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TemperatureChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}