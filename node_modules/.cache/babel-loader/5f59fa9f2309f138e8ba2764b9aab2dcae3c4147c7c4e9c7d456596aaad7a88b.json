{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Christian\\\\ruby_projects\\\\weather_react_frontend\\\\weather-app\\\\src\\\\TemperatureChart.js\",\n  _s = $RefreshSig$();\nimport { Line } from 'react-chartjs-2';\nimport React, { useEffect, useRef, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemperatureChart = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(({\n  data\n}) => {\n  _s();\n  const formattedDates = useMemo(() => data.hourly.time.map(dateString => new Date(dateString)), [data.hourly.time]);\n  const chartData = useMemo(() => ({\n    labels: formattedDates,\n    datasets: [{\n      label: 'Temperature',\n      data: data.hourly.temperature_2m,\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)'\n    }]\n  }), [data.hourly.temperature_2m, formattedDates]);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const chartOptions = {\n      scales: {\n        x: {\n          type: 'time',\n          time: {\n            unit: 'hour' // Specify the time unit (e.g., hour, day, month)\n          },\n          title: {\n            display: true,\n            text: 'Time'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: 'Temperature'\n          }\n        }\n      }\n    };\n    let currentChart = null; // Local variable to store the chart instance\n\n    if (chartRef.current) {\n      currentChart = new Line(chartRef.current, {\n        data: chartData,\n        options: chartOptions\n      });\n    }\n    return () => {\n      if (currentChart) {\n        currentChart.destroy();\n      }\n    };\n  }, [chartData]); // Removed chartOptions from the dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Temperature Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}, \"rbAh1+MhHtQXykbtG+DWd0eNUNo=\")), \"rbAh1+MhHtQXykbtG+DWd0eNUNo=\");\n_c2 = TemperatureChart;\nexport default TemperatureChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"TemperatureChart$React.memo\");\n$RefreshReg$(_c2, \"TemperatureChart\");","map":{"version":3,"names":["Line","React","useEffect","useRef","useMemo","jsxDEV","_jsxDEV","TemperatureChart","_s","memo","_c","data","formattedDates","hourly","time","map","dateString","Date","chartData","labels","datasets","label","temperature_2m","fill","borderColor","chartRef","chartOptions","scales","x","type","unit","title","display","text","y","currentChart","current","options","destroy","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c2","$RefreshReg$"],"sources":["C:/Users/Christian/ruby_projects/weather_react_frontend/weather-app/src/TemperatureChart.js"],"sourcesContent":["import { Line } from 'react-chartjs-2';\r\nimport React, { useEffect, useRef, useMemo } from 'react';\r\n\r\nconst TemperatureChart = React.memo(({ data }) => {\r\n  const formattedDates = useMemo(() => data.hourly.time.map(dateString => new Date(dateString)), [data.hourly.time]);\r\n  \r\n  const chartData = useMemo(() => ({\r\n    labels: formattedDates,\r\n    datasets: [\r\n      {\r\n        label: 'Temperature',\r\n        data: data.hourly.temperature_2m,\r\n        fill: false,\r\n        borderColor: 'rgb(75, 192, 192)',\r\n      }\r\n    ]\r\n  }), [data.hourly.temperature_2m, formattedDates]);\r\n\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const chartOptions = {\r\n      scales: {\r\n        x: {\r\n          type: 'time',\r\n          time: {\r\n            unit: 'hour', // Specify the time unit (e.g., hour, day, month)\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Time',\r\n          },\r\n        },\r\n        y: {\r\n          title: {\r\n            display: true,\r\n            text: 'Temperature',\r\n          },\r\n        },\r\n      },\r\n    };\r\n  \r\n    let currentChart = null; // Local variable to store the chart instance\r\n  \r\n    if (chartRef.current) {\r\n      currentChart = new Line(chartRef.current, {\r\n        data: chartData,\r\n        options: chartOptions\r\n      });\r\n    }\r\n  \r\n    return () => {\r\n      if (currentChart) {\r\n        currentChart.destroy();\r\n      }\r\n    };\r\n  }, [chartData]); // Removed chartOptions from the dependency array\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>Temperature Chart</h2>\r\n      <canvas ref={chartRef}></canvas>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default TemperatureChart;"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,gBAAgB,gBAAAC,EAAA,eAAGP,KAAK,CAACQ,IAAI,CAAAC,EAAA,GAAAF,EAAA,CAAC,CAAC;EAAEG;AAAK,CAAC,KAAK;EAAAH,EAAA;EAChD,MAAMI,cAAc,GAAGR,OAAO,CAAC,MAAMO,IAAI,CAACE,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,UAAU,IAAI,IAAIC,IAAI,CAACD,UAAU,CAAC,CAAC,EAAE,CAACL,IAAI,CAACE,MAAM,CAACC,IAAI,CAAC,CAAC;EAElH,MAAMI,SAAS,GAAGd,OAAO,CAAC,OAAO;IAC/Be,MAAM,EAAEP,cAAc;IACtBQ,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,aAAa;MACpBV,IAAI,EAAEA,IAAI,CAACE,MAAM,CAACS,cAAc;MAChCC,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC,CAAC,EAAE,CAACb,IAAI,CAACE,MAAM,CAACS,cAAc,EAAEV,cAAc,CAAC,CAAC;EAEjD,MAAMa,QAAQ,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,MAAMwB,YAAY,GAAG;MACnBC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,IAAI,EAAE,MAAM;UACZf,IAAI,EAAE;YACJgB,IAAI,EAAE,MAAM,CAAE;UAChB,CAAC;UACDC,KAAK,EAAE;YACLC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;UACR;QACF,CAAC;QACDC,CAAC,EAAE;UACDH,KAAK,EAAE;YACLC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;UACR;QACF;MACF;IACF,CAAC;IAED,IAAIE,YAAY,GAAG,IAAI,CAAC,CAAC;;IAEzB,IAAIV,QAAQ,CAACW,OAAO,EAAE;MACpBD,YAAY,GAAG,IAAInC,IAAI,CAACyB,QAAQ,CAACW,OAAO,EAAE;QACxCzB,IAAI,EAAEO,SAAS;QACfmB,OAAO,EAAEX;MACX,CAAC,CAAC;IACJ;IAEA,OAAO,MAAM;MACX,IAAIS,YAAY,EAAE;QAChBA,YAAY,CAACG,OAAO,CAAC,CAAC;MACxB;IACF,CAAC;EACH,CAAC,EAAE,CAACpB,SAAS,CAAC,CAAC,CAAC,CAAC;;EAGjB,oBACEZ,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BrC,OAAA;MAAQsC,GAAG,EAAEnB;IAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC,kCAAC;AAACE,GAAA,GA9DGtC,gBAAgB;AAgEtB,eAAeA,gBAAgB;AAAC,IAAAG,EAAA,EAAAmC,GAAA;AAAAC,YAAA,CAAApC,EAAA;AAAAoC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}