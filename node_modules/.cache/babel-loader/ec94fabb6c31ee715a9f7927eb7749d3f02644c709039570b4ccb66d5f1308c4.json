{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Christian\\\\ruby_projects\\\\weather_react_frontend\\\\weather-app\\\\src\\\\TemperatureChart.js\",\n  _s = $RefreshSig$();\nimport { Line } from 'react-chartjs-2';\nimport React, { useEffect, useRef, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemperatureChart = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(({\n  data\n}) => {\n  _s();\n  const formattedDates = data.hourly.time.map(dateString => new Date(dateString));\n  const chartData = useMemo(() => ({\n    labels: formattedDates,\n    datasets: [{\n      label: 'Temperature',\n      data: data.hourly.temperature_2m,\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)'\n    }]\n  }), [data.hourly.temperature_2m, formattedDates]);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const chartOptions = {\n      scales: {\n        x: {\n          type: 'time',\n          time: {\n            unit: 'hour' // Specify the time unit (e.g., hour, day, month)\n          },\n          title: {\n            display: true,\n            text: 'Time'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: 'Temperature'\n          }\n        }\n      }\n    };\n    if (chartRef.current) {\n      chartRef.current.destroy();\n    }\n    chartRef.current = new Line(chartRef.current, {\n      data: chartData,\n      options: chartOptions\n    });\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.destroy();\n      }\n    };\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Temperature Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n}, \"xjHr4yjok1XXG2SRbfksW3z8GYw=\")), \"xjHr4yjok1XXG2SRbfksW3z8GYw=\");\n_c2 = TemperatureChart;\nexport default TemperatureChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"TemperatureChart$React.memo\");\n$RefreshReg$(_c2, \"TemperatureChart\");","map":{"version":3,"names":["Line","React","useEffect","useRef","useMemo","jsxDEV","_jsxDEV","TemperatureChart","_s","memo","_c","data","formattedDates","hourly","time","map","dateString","Date","chartData","labels","datasets","label","temperature_2m","fill","borderColor","chartRef","chartOptions","scales","x","type","unit","title","display","text","y","current","destroy","options","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c2","$RefreshReg$"],"sources":["C:/Users/Christian/ruby_projects/weather_react_frontend/weather-app/src/TemperatureChart.js"],"sourcesContent":["import { Line } from 'react-chartjs-2';\r\nimport React, { useEffect, useRef, useMemo } from 'react';\r\n\r\nconst TemperatureChart = React.memo(({ data }) => {\r\n  const formattedDates = data.hourly.time.map(dateString => new Date(dateString));\r\n  \r\n  const chartData = useMemo(() => ({\r\n    labels: formattedDates,\r\n    datasets: [\r\n      {\r\n        label: 'Temperature',\r\n        data: data.hourly.temperature_2m,\r\n        fill: false,\r\n        borderColor: 'rgb(75, 192, 192)',\r\n      }\r\n    ]\r\n  }), [data.hourly.temperature_2m, formattedDates]);\r\n\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const chartOptions = {\r\n      scales: {\r\n        x: {\r\n          type: 'time',\r\n          time: {\r\n            unit: 'hour', // Specify the time unit (e.g., hour, day, month)\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Time',\r\n          },\r\n        },\r\n        y: {\r\n          title: {\r\n            display: true,\r\n            text: 'Temperature',\r\n          },\r\n        },\r\n      },\r\n    };\r\n\r\n    if (chartRef.current) {\r\n      chartRef.current.destroy();\r\n    }\r\n\r\n    chartRef.current = new Line(chartRef.current, {\r\n      data: chartData,\r\n      options: chartOptions\r\n    });\r\n\r\n    return () => {\r\n      if (chartRef.current) {\r\n        chartRef.current.destroy();\r\n      }\r\n    };\r\n  }, [chartData]);\r\n  \r\n    return (\r\n      <div>\r\n        <h2>Temperature Chart</h2>\r\n        <canvas ref={chartRef}></canvas>\r\n      </div>\r\n    );\r\n  });\r\n\r\nexport default TemperatureChart;"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,gBAAgB,gBAAAC,EAAA,eAAGP,KAAK,CAACQ,IAAI,CAAAC,EAAA,GAAAF,EAAA,CAAC,CAAC;EAAEG;AAAK,CAAC,KAAK;EAAAH,EAAA;EAChD,MAAMI,cAAc,GAAGD,IAAI,CAACE,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,UAAU,IAAI,IAAIC,IAAI,CAACD,UAAU,CAAC,CAAC;EAE/E,MAAME,SAAS,GAAGd,OAAO,CAAC,OAAO;IAC/Be,MAAM,EAAEP,cAAc;IACtBQ,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,aAAa;MACpBV,IAAI,EAAEA,IAAI,CAACE,MAAM,CAACS,cAAc;MAChCC,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC,CAAC,EAAE,CAACb,IAAI,CAACE,MAAM,CAACS,cAAc,EAAEV,cAAc,CAAC,CAAC;EAEjD,MAAMa,QAAQ,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,MAAMwB,YAAY,GAAG;MACnBC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,IAAI,EAAE,MAAM;UACZf,IAAI,EAAE;YACJgB,IAAI,EAAE,MAAM,CAAE;UAChB,CAAC;UACDC,KAAK,EAAE;YACLC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;UACR;QACF,CAAC;QACDC,CAAC,EAAE;UACDH,KAAK,EAAE;YACLC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;UACR;QACF;MACF;IACF,CAAC;IAED,IAAIR,QAAQ,CAACU,OAAO,EAAE;MACpBV,QAAQ,CAACU,OAAO,CAACC,OAAO,CAAC,CAAC;IAC5B;IAEAX,QAAQ,CAACU,OAAO,GAAG,IAAInC,IAAI,CAACyB,QAAQ,CAACU,OAAO,EAAE;MAC5CxB,IAAI,EAAEO,SAAS;MACfmB,OAAO,EAAEX;IACX,CAAC,CAAC;IAEF,OAAO,MAAM;MACX,IAAID,QAAQ,CAACU,OAAO,EAAE;QACpBV,QAAQ,CAACU,OAAO,CAACC,OAAO,CAAC,CAAC;MAC5B;IACF,CAAC;EACH,CAAC,EAAE,CAAClB,SAAS,CAAC,CAAC;EAEb,oBACEZ,OAAA;IAAAgC,QAAA,gBACEhC,OAAA;MAAAgC,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BpC,OAAA;MAAQqC,GAAG,EAAElB;IAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC,kCAAC;AAACE,GAAA,GA7DCrC,gBAAgB;AA+DtB,eAAeA,gBAAgB;AAAC,IAAAG,EAAA,EAAAkC,GAAA;AAAAC,YAAA,CAAAnC,EAAA;AAAAmC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}