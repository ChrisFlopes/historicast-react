{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Christian\\\\ruby_projects\\\\weather_react_frontend\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from 'react';\nimport Navbar from './NavBar';\nimport Forecast from './Forecast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [temperatureData, setTemperatureData] = useState(null);\n  const fetchTemperatureData = async formData => {\n    try {\n      const response = await fetch('http://localhost:3001/api/receive_data', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch temperature data');\n      }\n      const data = await response.json();\n      setTemperatureData(data);\n    } catch (error) {\n      console.error('Error fetching temperature data:', error);\n    }\n  };\n  const handleFormSubmit = async formData => {\n    await fetchTemperatureData(formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        onFormSubmit: handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: temperatureData ? /*#__PURE__*/_jsxDEV(Forecast, {\n        data: temperatureData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select a City and a date range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"P9ZZ0BGcSr0ccosOVnFv6nprQ3c=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","Forecast","jsxDEV","_jsxDEV","App","_s","temperatureData","setTemperatureData","fetchTemperatureData","formData","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","console","handleFormSubmit","className","children","onFormSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Christian/ruby_projects/weather_react_frontend/weather-app/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport Navbar from './NavBar';\nimport Forecast from './Forecast';\n\nfunction App() {\n  const [temperatureData, setTemperatureData] = useState(null);\n\n  const fetchTemperatureData = async (formData) => {\n    try {\n      const response = await fetch('http://localhost:3001/api/receive_data', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n      if (!response.ok) {\n        throw new Error('Failed to fetch temperature data');\n      }\n      const data = await response.json();\n      setTemperatureData(data);\n    } catch (error) {\n      console.error('Error fetching temperature data:', error);\n    }\n  };\n\n  const handleFormSubmit = async (formData) => {\n    await fetchTemperatureData(formData);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar onFormSubmit={handleFormSubmit} />\n      </header>\n      <div>\n        {temperatureData ? (\n          <Forecast data={temperatureData} />\n        ) : (\n          <p>Please select a City and a date range</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMS,oBAAoB,GAAG,MAAOC,QAAQ,IAAK;IAC/C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACvEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;MAC/B,CAAC,CAAC;MACA,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;MACrD;MACA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCb,kBAAkB,CAACY,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EAED,MAAME,gBAAgB,GAAG,MAAOd,QAAQ,IAAK;IAC3C,MAAMD,oBAAoB,CAACC,QAAQ,CAAC;EACtC,CAAC;EAED,oBACEN,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtB,OAAA;MAAQqB,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BtB,OAAA,CAACH,MAAM;QAAC0B,YAAY,EAAEH;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACT3B,OAAA;MAAAsB,QAAA,EACGnB,eAAe,gBACdH,OAAA,CAACF,QAAQ;QAACkB,IAAI,EAAEb;MAAgB;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEnC3B,OAAA;QAAAsB,QAAA,EAAG;MAAqC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC5C;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzB,EAAA,CAxCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAwCX;AAED,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}